---
swagger: "2.0"
info:
  description: This API is part of Fujitsu's Cloud Lab Demo
  version: 1.0.0
  title: FAI Offer API
  contact:
    email: sachin.jain@fujitsu.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
# basePath: /SacSoft/fai-offer-api/1.0.0
tags:
- name: reads
  description: -- reader operations
- name: writes
  description: -- writer operations
schemes:
- https
- http
paths:
  /offers:
    get:
      tags:
      - reads
      summary: searches offer by offer id
      description: By passing the right Offer ID, you can search the Offer from the Cache.
      operationId: getOffer
      produces:
      - application/json
      parameters:
      - name: offerId
        in: path
        description: offerId String
        required: true
        type: string
      - name: transactionId
        in: header
        description: A unique id for each request generated by each application
        required: true
        type: string
      responses:
        "200":
          description: offer matching the criteria
          schema:
              $ref: '#/definitions/offer'
        '404':
          description: NotFound
          schema:
            $ref: '#/definitions/errorResponses'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponses'
    post:
      tags:
      - writes
      summary: generates and persist offers
      description: generates and persist offers
      operationId: searchOffers
      consumes:
        - application/json
        - application/xml
        - text/xml
      produces:
        - application/json
        - application/xml
        - text/xml
      parameters:
      - name: transactionId
        in: header
        description: A unique id for each request generated by each application
        required: true
        type: string
      - name: channelId
        in: header
        description: The ID of the channel through which the order is getting placed
        required: true
        type: string
      - in: body
        name: searchCriteria
        description: offer search criteria
        required: true
        schema:
          $ref: '#/definitions/searchCriteria'
      responses:
        '200':
          description: offer generated
          schema:
            $ref: '#/definitions/offersList'
        '400':
          description: Bad Request, invalid input, object invalid
          schema:
            $ref: '#/definitions/errorResponses'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorResponses'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/errorResponses'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponses'
        "409":
          description: an existing item already exists
          schema:
            $ref: '#/definitions/errorResponses'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponses'
definitions:
  searchCriteria:
    type: object
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/Product'
      customer:
        $ref: '#/definitions/customer'
  offersList:
    type: object
    properties:
      offers:
        type: array
        description: Offers is list of offers
        items:
          $ref: '#/definitions/offer'
  offer:
    type: object
    required:
    - offerCreationDate
    - offerExpirationDate
    - offerId
    - offerType
    - product
    properties:
      offerId:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      offerType:
        type: string
        example: BlackFridaySpl2020
      offerPrice:
        $ref: '#/definitions/Price'
      offerCreationDate:
        type: string
        pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[\+\-]\d{4})$'
      offerExpirationDate:
        type: string
        pattern: '^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[\+\-]\d{4})$'
      product:
        $ref: '#/definitions/Product'
      customer:
        $ref: '#/definitions/customer'
  Price:
    type: object
    required:
    - currency
    - value
    properties:
      value:
        type: number
        format: double
        example: 999.99
      currency:
        type: string
        example: USD
        pattern: '^[A-Z]{3}$'
        description: 'Currency Code identifies a medium of exchange which allows for the translation of different-valued denominations of money across the world. Example:  USD = US Dollar  (ISO 4217 format)'
  Product:
    type: object
    required:
    - productCategory
    - productCode
    - productType
    - productPrice
    - productDescription
    properties:
      productCode:
        type: string
        example: LPTP001
      productType:
        type: string
        example: Laptop
      productCategory:
        type: string
        example: Home Computing
      productDescription:
        type: string
        example: Laptop XPS7950
      productPrice:
        type: object
        $ref: '#/definitions/Price'
  customer:
    type: object
    properties:
      customerId:
        type: string
        description: Customer Identifier represents a person or organization that initiates contact with a company or responds to a company initiation of contact.
      emailAddress:
        type: string
        description: |
          Electronic Mail (Email) Address specifies a character string which, when input within a particular context, will direct information to a resource available to a specific owner. 
      firstName:
        type: string
        description: First Name of the customer
      lastName:
        type: string
        description: Last Name of the customer
      billingAddress:
        type: string
        description: Billing address of the customer
      phone:
        type: string
        description: Phone number of the customer.
    description: 'Customer details'
  errorResponses:
    type: object
    properties:
      code:
        type: string
        description: Highest level error code sent by API.
      message:
        type: string
        description: Consumer friendly error message sent by API.
      developerMessage:
        type: string
        description: Technical details about the error for the understanding of API consumer developer.
    description: 'Technical details about the error including error code, message and additional details, if any'
# Added by API Auto Mocking Plugin
basePath: /sample/1.0.0